// Copyright The OpenTelemetry Authors
// SPDX-License-Identifier: Apache-2.0

// Code generated by "pdata/internal/cmd/pdatagen/main.go". DO NOT EDIT.
// To regenerate this file run "make genpdata".

package pdiscovery

import (
	"sort"

	"go.opentelemetry.io/collector/pdata/internal"
	"go.opentelemetry.io/collector/pdata/internal/data"
	otlpdiscovery "go.opentelemetry.io/collector/pdata/internal/data/protogen/discovery/v1"
	"go.opentelemetry.io/collector/pdata/pcommon"
)

// ResourceDiscovery is a collection of discovery from a Resource.
//
// This is a reference type, if passed by value and callee modifies it the
// caller will see the modification.
//
// Must use NewResourceDiscovery function to create new instances.
// Important: zero-initialized instance is not valid for use.
type ResourceDiscovery struct {
	orig *otlpdiscovery.ResourceDiscovery
	state *internal.State
}

func newResourceDiscovery(orig *otlpdiscovery.ResourceDiscovery, state *internal.State) ResourceDiscovery {
	return ResourceDiscovery{orig: orig, state: state}
}

// NewResourceDiscovery creates a new empty ResourceDiscovery.
//
// This must be used only in testing code. Users should use "AppendEmpty" when part of a Slice,
// OR directly access the member if this is embedded in another struct.
func NewResourceDiscovery() ResourceDiscovery {
	state := internal.StateMutable
	return newResourceDiscovery(&otlpdiscovery.ResourceDiscovery{}, &state)
}

// MoveTo moves all properties from the current struct overriding the destination and
// resetting the current instance to its zero value
func (ms ResourceDiscovery) MoveTo(dest ResourceDiscovery) {
	ms.state.AssertMutable()
	dest.state.AssertMutable()
	*dest.orig = *ms.orig
	*ms.orig = otlpdiscovery.ResourceDiscovery{}
}



// Resource returns the resource associated with this ResourceDiscovery.
func (ms ResourceDiscovery) Resource() pcommon.Resource {
	return pcommon.Resource(internal.NewResource(&ms.orig.Resource, ms.state))
}
// SchemaUrl returns the schemaurl associated with this ResourceDiscovery.
func (ms ResourceDiscovery) SchemaUrl() string {
	return ms.orig.SchemaUrl
}

// SetSchemaUrl replaces the schemaurl associated with this ResourceDiscovery.
func (ms ResourceDiscovery) SetSchemaUrl(v string) {
	ms.state.AssertMutable()
	ms.orig.SchemaUrl = v
}
// ScopeDiscovery returns the ScopeDiscovery associated with this ResourceDiscovery.
func (ms ResourceDiscovery) ScopeDiscovery() ScopeDiscoverySlice {
	return newScopeDiscoverySlice(&ms.orig.ScopeDiscovery, ms.state)
}


// CopyTo copies all properties from the current struct overriding the destination.
func (ms ResourceDiscovery) CopyTo(dest ResourceDiscovery) {
	dest.state.AssertMutable()
		ms.Resource().CopyTo(dest.Resource())
		dest.SetSchemaUrl(ms.SchemaUrl())
		ms.ScopeDiscovery().CopyTo(dest.ScopeDiscovery())
}
